import random
import numpy as np
import time
import _pickle as cPickle
from sklearn.model_selection import StratifiedKFold
from sklearn.utils import shuffle
from sklearn.metrics import confusion_matrix
from sklearn import svm
import matplotlib.pyplot as plt

x = np.load('data/malware_features.npy')
y = np.load('data/malware_labels.npy')
with open('data/malware.p','rb') as fp:
    families = cPickle.load(fp)
with open('data/nums.p','rb') as fp:
    images_perF = cPickle.load(fp)
print(families)
print(images_perF)

# shuffle the training data
n_samples, n_features = x.shape 
shuffle_l = list(range(n_samples))
random.shuffle(shuffle_l)

x, y = x[shuffle_l], y[shuffle_l]
kfold = 10
skf = StratifiedKFold(kfold)
conf_mat = np.zeros((len(families),len(families)))

for train_indices,test_indices in skf.split(x,y):
	clf = svm.SVC(gamma='scale')
	x_train, y_train = x[train_indices], y[train_indices]
	x_test, y_test = x[test_indices], y[test_indices]

	clf.fit(x_train,y_train) 
	y_predict = clf.predict(x_test)

	cm = confusion_matrix(y_test,y_predict)
	conf_mat = conf_mat + cm 
 
# row and cols are interchanged
conf_mat = conf_mat.T
avg_acc = np.trace(conf_mat) / n_samples
print('average accuracy is: ',avg_acc)
conf_mat_norm = conf_mat / images_perF

plt.imshow(conf_mat_norm, interpolation='nearest')
plt.title('Confusion matrix')
plt.colorbar()
plt.show()